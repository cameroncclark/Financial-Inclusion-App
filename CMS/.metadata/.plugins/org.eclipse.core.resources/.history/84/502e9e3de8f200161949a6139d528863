package Model;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;

import com.google.gson.Gson;

import ContentObjects.Link;
import ContentObjects.Number;

public class LinksModel {
	final String _PATH = "../../FinancialInclusionApplication/www/content/";
	Model model;
	Gson gson;
	ArrayList<Link> links;

	public LinksModel(Model model) {
		this.model = model;
		selectLinks();
	}
	
	public String[] selectLinks() {
		try {
			String fileText = model.getJSONString("externalLinks.JSON");

			Link[] linkArray = gson.fromJson(fileText, Link[].class);
			numbers = new ArrayList<Number>(Arrays.asList(numberArray));

			String[] numberNames = new String[numberArray.length];
			int count = 0;
			for (Number number : numberArray) {
				numberNames[count] = number.getName();
				count++;
			}
			return numberNames;

		} catch (Exception e) {
			e.printStackTrace();
		}
		return new String[] {};
	}
	
	/**
	 * Method to check to see if a link name already exists
	 * 
	 * @param name
	 * @return true/false depending if the name exists
	 */
	private Boolean duplicateLink(String name) {
		for (Link l : links) {
			if (l.getName().equals(name)) {
				return true;
			}
		}
		return false;
	}
	
	/**
	 * Method to rewrite the json files and tell the model to notify observers
	 */
	public void rewriteLinksFile() {
		try {
			Files.write(Paths.get(_PATH + "externalLinks.json"), gson.toJson(links).getBytes());
		} catch (IOException e) {
			e.printStackTrace();
		}
		model.changed();
	}
}
